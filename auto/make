#!/bin/sh
# vim: set noexpandtab

find $SRC -type d | sed -e "s/$SRC/$OBJ/" | xargs mkdir -p

core_dep=`find $SRC/core -name '*.h' | sort`
core_dep=$(mk_line "$core_dep")
core_dep="$AUTO_H $MODULES_H $core_dep"

event_dep=`find $SRC/event -name '*.h' | sort`
event_dep=$(mk_line "$event_dep")

http_dep=`find $SRC/http -name '*.h' | sort`
http_dep=$(mk_line "$http_dep")

objects=`find $SRC -name '*.c' | sort`
objects=$(mk_line "$objects")
objects=`echo "$objects" | sed -e "s/$SRC/$OBJ/;s/\.c/\.o/"`

cat <<END > $MAKEFILE
.PHONY: default clean
.SILENT: clean

CC = $CC
LINK = \$(CC)
CFLAGS = -g -pipe -O2 -W -Wall -Wextra -Wshadow -Wpointer-arith \
-Wstrict-prototypes -Wmissing-prototypes -Wdeclaration-after-statement \
-Wno-unused-parameter -Werror

CORE_INC = -I $SRC/core $incs
CORE_DEP = $core_dep

EVENT_INC = -I $SRC/event -I $SRC/event/modules
EVENT_DEP = $event_dep

HTTP_INC = -I $SRC/event -I $SRC/http -I $SRC/http/modules
HTTP_DEP = $http_dep

OBJECTS = $objects

all: default
	@echo > /dev/null

default: $TARGET

$TARGET: \$(OBJECTS)
	@/bin/echo -n "linking... " ; \\
	\$(LINK) \$(OBJECTS) -o $TARGET $libs ; \\
	echo "done."

build/wsgi_main.o: src/wsgi_main.c \$(CORE_DEP) \$(EVENT_DEP) \$(HTTP_DEP)
	@echo "\$(CC) wsgi_main.c" ; \\
    \$(CC) \$(CFLAGS) \$(CORE_INC) \$(EVENT_INC) \$(HTTP_INC) \\
        -c src/wsgi_main.c -o \$@

END

source=`find $SRC/core -name '*.c' | sort`
for s in $source
do
    o=`echo $s | sed -e "s/$SRC/$OBJ/;s/\.c/\.o/"`
	n=`echo $s | sed 's/src\///'`
    cat <<END >> $MAKEFILE
$o: $s \$(CORE_DEP)
	@echo "\$(CC) $n" ; \\
    \$(CC) \$(CFLAGS) \$(CORE_INC) -c $s -o \$@

END
done

source=`find $SRC/event -name '*.c' | sort`
for s in $source
do
    o=`echo $s | sed -e "s/$SRC/$OBJ/;s/\.c/\.o/"`
	n=`echo $s | sed 's/src\///'`
    cat <<END >> $MAKEFILE
$o: $s \$(CORE_DEP) \$(EVENT_DEP)
	@echo "\$(CC) $n" ; \\
    \$(CC) \$(CFLAGS) \$(CORE_INC) \$(EVENT_INC) -c $s -o \$@

END
done

source=`find $SRC/http -name '*.c' | sort`
for s in $source
do
    o=`echo $s | sed -e "s/$SRC/$OBJ/;s/\.c/\.o/"`
	n=`echo $s | sed 's/src\///'`
    cat <<END >> $MAKEFILE
$o: $s \$(CORE_DEP) \$(EVENT_DEP) \$(HTTP_DEP)
	@echo "\$(CC) $n" ; \\
    \$(CC) \$(CFLAGS) \$(CORE_INC) \$(EVENT_INC) \$(HTTP_INC) -c $s -o \$@

END
done


cat <<END >> $MAKEFILE
clean:
	rm -f $TARGET ; find $OBJ -name '*.o' -exec rm -f {} \;

rrun:
	rsync -raz --delete --exclude .hg --exclude Makefile --exclude $OBJ \\
        . -e ssh deby32:~/wheezy.wsgi/ && \\
        ssh -tx deby32 "cd ~/wheezy.wsgi && make -j2 && valgrind $TARGET"

socat:
	cat conf/http-get.txt | socat - unix:/tmp/sample.sock
END
